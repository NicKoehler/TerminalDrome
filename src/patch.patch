diff --git a/src/main.rs b/src/main.rs
--- a/src/main.rs
+++ b/src/main.rs
@@ -419,6 +419,7 @@
     let mut terminal = Terminal::new(backend)?;
 
     let mut app = App::new().await?;
-    let mut last_tick = Instant::now();
+    let mut last_ui_update = Instant::now();
+    let ui_refresh_rate = Duration::from_millis(100);
 
     loop {
         app.update_now_playing().await;
@@ -445,8 +446,13 @@
             }
         }
 
-        if last_tick.elapsed() > Duration::from_millis(500) {
-            app.update_now_playing().await;
-            last_tick = Instant::now();
+        // Force UI refresh at regular intervals
+        if last_ui_update.elapsed() > ui_refresh_rate {
+            terminal.draw(|f| ui(f, &app))?;
+            last_ui_update = Instant::now();
+        } else {
+            // Small sleep to prevent CPU overload
+            tokio::time::sleep(Duration::from_millis(10)).await;
         }
     }
 
diff --git a/src/main.rs b/src/main.rs
--- a/src/main.rs
+++ b/src/main.rs
@@ -335,7 +335,7 @@
                                                 if let Some(index) = n.as_i64().or_else(|| n.as_f64().map(|f| f as i64)) {
                                                     let mut status = status_clone.lock().await;
                                                     status.current_index = Some(index as usize);
                                                 }
-                                            }
+                                            status_clone.lock().await.should_quit = false;
                                         }
                                     },
                                     Err(e) => eprintln!("MPV Event Parse Error: {}", e),
diff --git a/src/main.rs b/src/main.rs
--- a/src/main.rs
+++ b/src/main.rs
@@ -303,9 +303,11 @@
 
 async fn update_now_playing(&mut self) {
     let current_index = {
-        let status = self.player_status.lock().await;
-        status.current_index
+        let mut status = self.player_status.lock().await;
+        status.current_index.take()
     };
+    let mut status = self.player_status.lock().await;
+    status.current_index = current_index;
     
     if let Some(index) = current_index {
         let valid_index = index.min(self.songs.len().saturating_sub(1));
         if self.now_playing != Some(valid_index) {
